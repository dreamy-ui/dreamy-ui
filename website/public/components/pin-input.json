{
  "type": "component",
  "fileDependencies": [
    "./box",
    "./input"
  ],
  "id": "pin-input",
  "file": {
    "name": "pin-input.tsx",
    "content": "\"use client\";\n\nimport {\n    PinInputDescendantsProvider,\n    PinInputProvider,\n    type UsePinInputProps,\n    usePinInput,\n    usePinInputField\n} from \"@dreamy-ui/react\";\nimport { forwardRef } from \"react\";\nimport { splitCssProps } from \"styled-system/jsx\";\nimport { Box, type BoxProps } from \"./box\";\nimport { Input, type InputProps } from \"./input\";\n\nexport interface PinInputProps\n    extends UsePinInputProps,\n        Omit<InputProps, keyof UsePinInputProps | keyof BoxProps>,\n        Omit<BoxProps, keyof UsePinInputProps> {\n    /**\n     * The children of the pin input component\n     */\n    children: React.ReactNode;\n}\n\n/**\n * PinInput component\n *\n * @see Docs https://dreamy-ui.com/docs/components/pin-input\n */\nexport const PinInput = forwardRef<HTMLDivElement, PinInputProps>(function PinInput(props, ref) {\n    const { children, ...rest } = props;\n    const [cssProps, otherProps] = splitCssProps(rest);\n    const { descendants, ...context } = usePinInput(otherProps);\n\n    return (\n        <Box\n            {...cssProps}\n            data-pin-input\n            ref={ref}\n        >\n            <PinInputDescendantsProvider value={descendants}>\n                <PinInputProvider value={context}>{children}</PinInputProvider>\n            </PinInputDescendantsProvider>\n        </Box>\n    );\n});\n\nPinInput.displayName = \"PinInput\";\n\nexport interface PinInputFieldProps extends InputProps {}\n\nexport const PinInputField = forwardRef<PinInputFieldProps, InputProps>(\n    function PinInputField(props, ref) {\n        const inputProps = usePinInputField(props, ref);\n\n        return (\n            <Input\n                inputType={\"pin\"}\n                {...inputProps}\n            />\n        );\n    }\n);\n"
  },
  "component": "PinInput",
  "hasRecipe": false,
  "hasPattern": false
}