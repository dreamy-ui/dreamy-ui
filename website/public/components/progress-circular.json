{
  "type": "component",
  "fileDependencies": [
    "./factory"
  ],
  "id": "progress-circular",
  "file": {
    "name": "progress-circular.tsx",
    "content": "\"use client\";\r\n\r\nimport { type UseCircularProgressProps, useCircularProgress } from \"@dreamy-ui/react\";\r\nimport { forwardRef } from \"react\";\r\nimport { styled } from \"styled-system/jsx\";\r\nimport { type ProgressCircularVariantProps, progressCircular } from \"styled-system/recipes\";\r\nimport type { HTMLDreamyProps } from \"./factory\";\r\n\r\nexport interface ProgressCircularProps\r\n    extends UseCircularProgressProps,\r\n        Omit<HTMLDreamyProps<\"div\">, keyof UseCircularProgressProps>,\r\n        ProgressCircularVariantProps {}\r\n\r\nconst StyledProgressCircular = styled(\"div\", progressCircular);\r\n\r\n/**\r\n * ProgressCircular component\r\n *\r\n * @See Docs https://dreamy-ui.com/docs/components/progress-circular\r\n */\r\nexport const ProgressCircular = forwardRef<HTMLDivElement, ProgressCircularProps>((props, ref) => {\r\n    const {\r\n        label,\r\n        showValueLabel,\r\n        getProgressBarProps,\r\n        getLabelProps,\r\n        getSvgProps,\r\n        getIndicatorProps,\r\n        getTrackProps,\r\n        valueText\r\n    } = useCircularProgress({ ref, ...props });\r\n\r\n    const progressBarProps = getProgressBarProps();\r\n\r\n    return (\r\n        <StyledProgressCircular {...progressBarProps}>\r\n            <div>\r\n                <svg\r\n                    {...getSvgProps()}\r\n                    aria-hidden=\"true\"\r\n                >\r\n                    <circle {...getTrackProps()} />\r\n                    <circle {...getIndicatorProps()} />\r\n                </svg>\r\n                {showValueLabel && <span data-part=\"valueText\">{valueText}</span>}\r\n            </div>\r\n            {label && <span {...getLabelProps()}>{label}</span>}\r\n        </StyledProgressCircular>\r\n    );\r\n});\r\n\r\nProgressCircular.displayName = \"ProgressCircular\";\r\n"
  },
  "component": "ProgressCircular",
  "hasRecipe": true,
  "hasPattern": false,
  "recipeIds": [
    "progress-circular"
  ]
}