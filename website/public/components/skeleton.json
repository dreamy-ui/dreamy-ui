{
  "type": "component",
  "fileDependencies": [
    "./factory"
  ],
  "id": "skeleton",
  "file": {
    "name": "skeleton.tsx",
    "content": "import { forwardRef } from \"react\";\nimport { type SkeletonVariantProps, skeleton } from \"styled-system/recipes\";\nimport { type HTMLDreamyProps, dreamy } from \"./factory\";\n\nexport interface SkeletonProps extends HTMLDreamyProps<\"div\">, SkeletonVariantProps {}\n\nconst StyledSkeleton = dreamy(\"div\", skeleton);\n\n/**\n * Skeleton component.\n *\n * @See Docs https://dreamy-ui.com/docs/components/skeleton\n */\nexport const Skeleton = forwardRef<HTMLDivElement, SkeletonProps>((props, ref) => {\n    return (\n        <StyledSkeleton\n            ref={ref}\n            {...props}\n        />\n    );\n});\n\nexport interface SkeletonTextProps extends SkeletonProps {\n    /**\n     * Number of lines to display.\n     * @default 1\n     */\n    lines?: number;\n}\n\n/**\n * Skeleton Text component.\n *\n * @See Docs https://dreamy-ui.com/docs/components/skeleton\n */\nexport const SkeletonText = forwardRef<HTMLDivElement, SkeletonTextProps>((props, ref) => {\n    const { lines = 1, ...rest } = props;\n\n    return (\n        <div data-skeleton-text-wrapper>\n            {Array.from({ length: lines }).map((_, index) => (\n                <StyledSkeleton\n                    data-skeleton-text\n                    key={index}\n                    ref={ref}\n                    {...rest}\n                />\n            ))}\n        </div>\n    );\n});\n"
  },
  "component": "Skeleton",
  "hasRecipe": true,
  "hasPattern": false,
  "recipeIds": [
    "skeleton"
  ]
}