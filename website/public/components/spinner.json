{
  "type": "component",
  "fileDependencies": [
    "./box",
    "./factory"
  ],
  "id": "spinner",
  "file": {
    "name": "spinner.tsx",
    "content": "import { forwardRef } from \"react\";\r\nimport { type SpinnerVariantProps, spinner } from \"styled-system/recipes\";\r\nimport { Box, type BoxProps } from \"./box\";\r\nimport { dreamy } from \"./factory\";\r\n\r\nexport interface SpinnerProps extends BoxProps, SpinnerVariantProps {\r\n    /**\r\n     * Speed of the spinner animation\r\n     */\r\n    speed?: `${number}s` | `${number}ms`;\r\n    /**\r\n     * The label of the spinner\r\n     */\r\n    label?: string;\r\n    /**\r\n     * Props to be forwarded to the label\r\n     * Alternatively, you can use `css` prop in the `Spinner` component\r\n     * to style the label like:\r\n     * ```ts\r\n     * <Spinner\r\n     *   label={\"Loading\"}\r\n     *   css={{\r\n     *     \"& [data-part=label]\": {\r\n     *       color: \"fg\"\r\n     *     }\r\n     *   }}\r\n     * />\r\n     * ```\r\n     */\r\n    labelProps?: BoxProps;\r\n}\r\n\r\nconst StyledSpinner = dreamy(\"div\", spinner);\r\n\r\n/**\r\n * Spinner indicates a loading state for a user.\r\n *\r\n * @See Docs https://dreamy-ui.com/docs/components/spinner\r\n */\r\nexport const Spinner = forwardRef<HTMLDivElement, SpinnerProps>((props, ref) => {\r\n    const { label, labelProps, speed, style, ...rest } = props;\r\n\r\n    return (\r\n        <StyledSpinner\r\n            ref={ref}\r\n            {...rest}\r\n            data-part=\"root\"\r\n            style={{\r\n                // @ts-expect-error\r\n                \"--spinner-speed\": speed,\r\n                ...style\r\n            }}\r\n        >\r\n            <div data-part=\"wrapper\">\r\n                <i data-part=\"circle1\" />\r\n                <i data-part=\"circle2\" />\r\n            </div>\r\n            {label && (\r\n                <Box\r\n                    as={\"span\"}\r\n                    {...labelProps}\r\n                    data-part=\"label\"\r\n                >\r\n                    {label}\r\n                </Box>\r\n            )}\r\n        </StyledSpinner>\r\n    );\r\n});\r\n\r\nSpinner.displayName = \"Spinner\";\r\n"
  },
  "component": "Spinner",
  "hasRecipe": true,
  "hasPattern": false,
  "recipeId": "spinner"
}