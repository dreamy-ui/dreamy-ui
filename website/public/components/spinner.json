{
  "type": "component",
  "fileDependencies": [
    "./box",
    "./factory"
  ],
  "id": "spinner",
  "file": {
    "name": "spinner.tsx",
    "content": "import { forwardRef } from \"react\";\nimport { type SpinnerVariantProps, spinner } from \"styled-system/recipes\";\nimport { Box, type BoxProps } from \"./box\";\nimport { dreamy } from \"./factory\";\n\nexport interface SpinnerProps extends BoxProps, SpinnerVariantProps {\n    /**\n     * Speed of the spinner animation\n     */\n    speed?: `${number}s` | `${number}ms`;\n    /**\n     * The label of the spinner\n     */\n    label?: string;\n    /**\n     * Props to be forwarded to the label\n     * Alternatively, you can use `css` prop in the `Spinner` component\n     * to style the label like:\n     * ```ts\n     * <Spinner\n     *   label={\"Loading\"}\n     *   css={{\n     *     \"& [data-part=label]\": {\n     *       color: \"fg\"\n     *     }\n     *   }}\n     * />\n     * ```\n     */\n    labelProps?: BoxProps;\n}\n\nconst StyledSpinner = dreamy(\"div\", spinner);\n\n/**\n * Spinner indicates a loading state for a user.\n *\n * @See Docs https://dreamy-ui.com/docs/components/spinner\n */\nexport const Spinner = forwardRef<HTMLDivElement, SpinnerProps>((props, ref) => {\n    const { label, labelProps, speed, style, ...rest } = props;\n\n    return (\n        <StyledSpinner\n            ref={ref}\n            {...rest}\n            data-part=\"root\"\n            style={{\n                // @ts-expect-error\n                \"--spinner-speed\": speed,\n                ...style\n            }}\n        >\n            <div data-part=\"wrapper\">\n                <i data-part=\"circle1\" />\n                <i data-part=\"circle2\" />\n            </div>\n            {label && (\n                <Box\n                    as={\"span\"}\n                    {...labelProps}\n                    data-part=\"label\"\n                >\n                    {label}\n                </Box>\n            )}\n        </StyledSpinner>\n    );\n});\n\nSpinner.displayName = \"Spinner\";\n"
  },
  "component": "Spinner",
  "hasRecipe": true,
  "hasPattern": false,
  "recipeIds": [
    "spinner"
  ]
}