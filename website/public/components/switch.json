{
  "type": "component",
  "fileDependencies": [
    "./factory",
    "./motion",
    "./visually-hidden"
  ],
  "id": "switch",
  "file": {
    "name": "switch.tsx",
    "content": "import { type UseSwitchProps, runIfFn, useSwitch } from \"@dreamy-ui/react\";\nimport { forwardRef } from \"react\";\nimport { type SwittchVariantProps, swittch } from \"styled-system/recipes\";\nimport { dreamy } from \"./factory\";\nimport { MotionBox } from \"./motion\";\nimport { VisuallyHiddenInput } from \"./visually-hidden\";\n\nexport interface SwitchProps extends UseSwitchProps, SwittchVariantProps {}\n\nconst StyledSwitch = dreamy(\"div\", swittch);\n\n/**\n * Switch component\n *\n * @See Docs https://dreamy-ui.com/docs/components/Switch\n */\nexport const Switch = forwardRef<HTMLInputElement, SwitchProps>((props, ref) => {\n    const {\n        children,\n        icon,\n        getRootProps,\n        getWrapperProps,\n        getInputProps,\n        getThumbProps,\n        getLabelProps\n    } = useSwitch({ ...props, ref });\n\n    return (\n        <StyledSwitch {...(getRootProps() as any)}>\n            <VisuallyHiddenInput {...(getInputProps() as any)} />\n            <span {...getWrapperProps()}>\n                <MotionBox {...(getThumbProps() as any)}>{runIfFn(icon as any)}</MotionBox>\n            </span>\n            {children && <span {...getLabelProps()}>{children}</span>}\n        </StyledSwitch>\n    );\n});\n\nSwitch.displayName = \"Switch\";\n"
  },
  "component": "Switch",
  "hasRecipe": true,
  "hasPattern": false,
  "recipeIds": [
    "swittch"
  ]
}