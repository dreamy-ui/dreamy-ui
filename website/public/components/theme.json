{
  "type": "component",
  "fileDependencies": [
    "./factory"
  ],
  "id": "theme",
  "file": {
    "name": "theme.tsx",
    "content": "import { forwardRef } from \"react\";\nimport { cx } from \"styled-system/css\";\nimport { type ThemeVariantProps, theme } from \"styled-system/recipes\";\nimport { type HTMLDreamyProps, dreamy } from \"./factory\";\n\nexport interface ThemeProps extends HTMLDreamyProps<\"div\">, ThemeVariantProps {}\n\nexport interface DarkThemeProps extends ThemeProps {}\n\nconst StyledTheme = dreamy(\"div\", theme);\n\n/**\n * Dark Theme component\n *\n * @See Docs https://dreamy-ui.com/docs/components/theme\n */\nexport const DarkTheme = forwardRef<HTMLDivElement, ThemeProps>((props, ref) => {\n    return (\n        <StyledTheme\n            ref={ref}\n            {...props}\n            data-theme=\"dark\"\n            className={cx(\"dark\", props.className)}\n        />\n    );\n});\n\nexport interface LightThemeProps extends ThemeProps {}\n\n/**\n * Light Theme component\n *\n * @See Docs https://dreamy-ui.com/docs/components/theme\n */\nexport const LightTheme = forwardRef<HTMLDivElement, ThemeProps>((props, ref) => {\n    return (\n        <StyledTheme\n            ref={ref}\n            {...props}\n            data-theme=\"light\"\n            className={cx(\"light\", props.className)}\n        />\n    );\n});\n"
  },
  "component": "Theme",
  "hasRecipe": true,
  "hasPattern": false,
  "recipeIds": [
    "theme"
  ]
}