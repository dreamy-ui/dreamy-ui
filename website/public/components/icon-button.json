{
  "type": "component",
  "fileDependencies": [
    "./button",
    "./factory"
  ],
  "id": "icon-button",
  "file": {
    "name": "icon-button.tsx",
    "content": "\"use client\";\n\nimport { forwardRef } from \"react\";\nimport type { ButtonVariantProps } from \"styled-system/recipes\";\nimport { Button, type UniversalButtonProps } from \"./button\";\nimport type { HTMLDreamyProps } from \"./factory\";\n\ninterface Props extends UniversalButtonProps {\n    /**\n     * aria-label is required for accessibility\n     */\n    \"aria-label\": string;\n    /*\n     * The icon to display\n     */\n    icon: React.ReactNode;\n}\n\nexport interface IconButtonProps\n    extends Omit<HTMLDreamyProps<\"button\">, \"aria-label\" | \"children\">,\n        ButtonVariantProps,\n        Props {}\n\nexport const IconButton = forwardRef<HTMLButtonElement, IconButtonProps>(\n    ({ icon, ...props }, ref) => {\n        return (\n            <Button\n                ref={ref}\n                {...props}\n                data-type={\"icon-button\"}\n            >\n                {icon}\n            </Button>\n        );\n    }\n);\n"
  },
  "component": "IconButton",
  "hasRecipe": false,
  "hasPattern": false
}