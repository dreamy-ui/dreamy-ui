{
  "type": "component",
  "fileDependencies": [
    "./button",
    "./factory"
  ],
  "id": "icon-button",
  "file": {
    "name": "icon-button.tsx",
    "content": "\"use client\";\r\n\r\nimport { forwardRef } from \"react\";\r\nimport type { ButtonVariantProps } from \"styled-system/recipes\";\r\nimport { Button, type UniversalButtonProps } from \"./button\";\r\nimport type { HTMLDreamyProps } from \"./factory\";\r\n\r\ninterface Props extends UniversalButtonProps {\r\n    /**\r\n     * aria-label is required for accessibility\r\n     */\r\n    \"aria-label\": string;\r\n    /*\r\n     * The icon to display\r\n     */\r\n    icon: React.ReactNode;\r\n}\r\n\r\nexport interface IconButtonProps\r\n    extends Omit<HTMLDreamyProps<\"button\">, \"aria-label\" | \"children\">,\r\n        ButtonVariantProps,\r\n        Props {}\r\n\r\nexport const IconButton = forwardRef<HTMLButtonElement, IconButtonProps>(\r\n    ({ icon, ...props }, ref) => {\r\n        return (\r\n            <Button\r\n                ref={ref}\r\n                {...props}\r\n                data-type={\"icon-button\"}\r\n            >\r\n                {icon}\r\n            </Button>\r\n        );\r\n    }\r\n);\r\n"
  },
  "component": "IconButton",
  "hasRecipe": false,
  "hasPattern": false
}