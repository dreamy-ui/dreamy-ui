{
  "type": "component",
  "fileDependencies": [
    "./factory"
  ],
  "id": "list",
  "file": {
    "name": "list.tsx",
    "content": "import { forwardRef } from \"react\";\nimport { type ListVariantProps, list } from \"styled-system/recipes\";\nimport { type HTMLDreamyProps, dreamy } from \"./factory\";\n\n// DTS build fails if I try to use generics and HTMLDreamProps generic in HTMLDreamProps has to be constant\nexport interface ListProps extends HTMLDreamyProps<\"ol\">, ListVariantProps {\n    ordered?: boolean;\n    unordered?: boolean;\n}\n\nconst StyledList = dreamy(\"ol\", list);\n\n/**\n * List component\n *\n * @See Docs https://dreamy-ui.com/docs/components/list\n */\nexport const List = forwardRef<HTMLOListElement | HTMLUListElement, ListProps>((props, ref) => {\n    const { ordered, unordered, ...rest } = props;\n\n    if (ordered && unordered) console.warn(\"List cannot have both ordered and unordered props\");\n\n    return (\n        <StyledList\n            data-type={ordered ? \"ordered\" : \"unordered\"}\n            as={ordered ? \"ol\" : \"ul\"}\n            ref={ref}\n            {...rest}\n        />\n    );\n});\n\nexport interface ListItemProps extends HTMLDreamyProps<\"li\"> {}\n\nconst StyledListItem = dreamy.li;\n\nexport const ListItem = forwardRef<HTMLLIElement, ListItemProps>((props, ref) => {\n    return (\n        <StyledListItem\n            ref={ref}\n            {...props}\n        />\n    );\n});\n"
  },
  "component": "List",
  "hasRecipe": true,
  "hasPattern": false,
  "recipeIds": [
    "list"
  ]
}