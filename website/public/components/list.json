{
  "type": "component",
  "fileDependencies": [
    "./factory"
  ],
  "id": "list",
  "file": {
    "name": "list.tsx",
    "content": "import { forwardRef } from \"react\";\r\nimport { type ListVariantProps, list } from \"styled-system/recipes\";\r\nimport { type HTMLDreamyProps, dreamy } from \"./factory\";\r\n\r\nexport interface ListProps extends HTMLDreamyProps<\"ol\">, ListVariantProps {\r\n    ordered?: boolean;\r\n    unordered?: boolean;\r\n}\r\n\r\nconst StyledList = dreamy(\"ol\", list);\r\n\r\n/**\r\n * List component\r\n *\r\n * @See Docs https://dreamy-ui.com/docs/components/list\r\n */\r\nexport const List = forwardRef<HTMLOListElement | HTMLUListElement, ListProps>((props, ref) => {\r\n    const { ordered, unordered, ...rest } = props;\r\n\r\n    if (ordered && unordered) console.warn(\"List cannot have both ordered and unordered props\");\r\n\r\n    return (\r\n        <StyledList\r\n            data-type={ordered ? \"ordered\" : \"unordered\"}\r\n            as={ordered ? \"ol\" : \"ul\"}\r\n            ref={ref}\r\n            {...rest}\r\n        />\r\n    );\r\n});\r\n\r\nexport interface ListItemProps extends HTMLDreamyProps<\"li\"> {}\r\n\r\n/**\r\n * ListItem component\r\n *\r\n * @See Docshttps://dreamy-ui.com/docs/components/list\r\n */\r\nexport const ListItem = forwardRef<HTMLLIElement, ListItemProps>((props, ref) => {\r\n    return (\r\n        <dreamy.li\r\n            ref={ref}\r\n            {...props}\r\n        />\r\n    );\r\n});\r\n"
  },
  "component": "List",
  "hasRecipe": true,
  "hasPattern": false,
  "recipeIds": [
    "list"
  ]
}