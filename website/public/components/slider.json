{
  "type": "component",
  "fileDependencies": [
    "./box",
    "./factory",
    "./style-context",
    "./visually-hidden"
  ],
  "id": "slider",
  "file": {
    "name": "slider.tsx",
    "content": "import { SliderProvider, type UseSliderProps, useSlider, useSliderContext } from \"@dreamy-ui/react\";\r\nimport { forwardRef } from \"react\";\r\nimport { slider } from \"styled-system/recipes\";\r\nimport { Box } from \"./box\";\r\nimport type { HTMLDreamyProps } from \"./factory\";\r\nimport { createStyleContext } from \"./style-context\";\r\nimport { VisuallyHiddenInput } from \"./visually-hidden\";\r\n\r\nconst { withProvider, withContext } = createStyleContext(slider);\r\n\r\nexport interface SliderProps extends UseSliderProps {}\r\n\r\n/**\r\n * Slider component\r\n *\r\n * @See Docs https://dreamy-ui.com/docs/components/slider\r\n */\r\nexport const Slider = withProvider(\r\n    forwardRef<HTMLDivElement, SliderProps>((props, ref) => {\r\n        const { getRootProps, getInputProps, ...rest } = useSlider(props);\r\n\r\n        return (\r\n            <SliderProvider value={rest}>\r\n                <VisuallyHiddenInput {...(getInputProps(undefined, ref) as any)} />\r\n                <Box {...(getRootProps(undefined, ref) as any)} />\r\n            </SliderProvider>\r\n        );\r\n    }),\r\n    \"root\"\r\n);\r\n\r\nexport interface SliderTrackProps extends HTMLDreamyProps<\"div\"> {}\r\n\r\nexport const SliderTrack = withContext(\r\n    forwardRef<HTMLDivElement, SliderTrackProps>((props, ref) => {\r\n        const { getTrackProps } = useSliderContext();\r\n\r\n        return <Box {...getTrackProps(props, ref)} />;\r\n    }),\r\n    \"track\"\r\n);\r\n\r\nexport interface SliderFilledTrackProps extends HTMLDreamyProps<\"div\"> {}\r\n\r\nexport const SliderFilledTrack = withContext(\r\n    forwardRef<HTMLDivElement, SliderFilledTrackProps>((props, ref) => {\r\n        const { getInnerTrackProps } = useSliderContext();\r\n        return (\r\n            <Box\r\n                ref={ref}\r\n                {...getInnerTrackProps(props, ref)}\r\n            />\r\n        );\r\n    }),\r\n    \"trackFilled\"\r\n);\r\n\r\nexport interface SliderThumbProps extends HTMLDreamyProps<\"div\"> {}\r\n\r\nexport const SliderThumb = withContext(\r\n    forwardRef<HTMLDivElement, SliderThumbProps>((props, ref) => {\r\n        const { getThumbProps } = useSliderContext();\r\n\r\n        return <Box {...getThumbProps(props, ref)} />;\r\n    }),\r\n    \"thumb\"\r\n);\r\n\r\nexport interface SliderMarkProps extends HTMLDreamyProps<\"div\"> {\r\n    value: number;\r\n}\r\n\r\nexport const SliderMark = withContext(\r\n    forwardRef<HTMLDivElement, SliderMarkProps>((props, ref) => {\r\n        const { getMarkerProps } = useSliderContext();\r\n\r\n        return <Box {...getMarkerProps(props, ref)} />;\r\n    }),\r\n    \"marker\"\r\n);\r\n"
  },
  "component": "Slider",
  "hasRecipe": true,
  "hasPattern": false,
  "recipeId": "slider"
}