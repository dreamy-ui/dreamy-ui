{
  "type": "component",
  "fileDependencies": [
    "./factory"
  ],
  "id": "stack",
  "file": {
    "name": "stack.tsx",
    "content": "import React, { forwardRef } from \"react\";\r\nimport { cx } from \"styled-system/css\";\r\nimport { type StackProperties, stack } from \"styled-system/patterns\";\r\nimport { type HTMLDreamyProps, dreamy } from \"./factory\";\r\n\r\nexport interface StackProps\r\n    extends Omit<HTMLDreamyProps<\"div\">, keyof StackProperties>,\r\n        StackProperties {\r\n    separator?: React.ReactNode;\r\n}\r\n\r\nconst StyledStack = dreamy.div;\r\n\r\n/**\r\n * Stack component.\r\n *\r\n * @See Docs https://dreamy-ui.com/docs/components/stack\r\n */\r\nexport const Stack = forwardRef<HTMLDivElement, StackProps>(\r\n    ({ separator, direction = \"row\", children, className, ...props }, ref) => {\r\n        return (\r\n            <StyledStack\r\n                ref={ref}\r\n                className={cx(\r\n                    stack({\r\n                        direction,\r\n                        alignItems: direction === \"row\" ? \"center\" : undefined\r\n                    }),\r\n                    className\r\n                )}\r\n                {...props}\r\n            >\r\n                {React.Children.map(children, (child, index) => (\r\n                    <>\r\n                        {child}\r\n                        {separator &&\r\n                            index < React.Children.toArray(children).length - 1 &&\r\n                            separator}\r\n                    </>\r\n                ))}\r\n            </StyledStack>\r\n        );\r\n    }\r\n);\r\n\r\nexport interface HStackProps extends Omit<StackProps, \"direction\"> {}\r\n\r\n/**\r\n * HStack component. Stack component with `direction=\"row\"`.\r\n *\r\n * @See Docs https://dreamy-ui.com/docs/components/stack\r\n */\r\nexport const HStack = forwardRef<HTMLDivElement, HStackProps>(({ children, ...props }, ref) => {\r\n    return (\r\n        <Stack\r\n            ref={ref}\r\n            direction={\"row\"}\r\n            {...props}\r\n        >\r\n            {children}\r\n        </Stack>\r\n    );\r\n});\r\n\r\nexport interface VStackProps extends Omit<StackProps, \"direction\"> {}\r\n\r\n/**\r\n * VStack component. Stack component with `direction=\"column\"`.\r\n *\r\n * @See Docs https://dreamy-ui.com/docs/components/stack\r\n */\r\nexport const VStack = forwardRef<HTMLDivElement, VStackProps>(({ children, ...props }, ref) => {\r\n    return (\r\n        <Stack\r\n            ref={ref}\r\n            direction={\"column\"}\r\n            {...props}\r\n        >\r\n            {children}\r\n        </Stack>\r\n    );\r\n});\r\n"
  },
  "component": "Stack",
  "hasRecipe": false,
  "hasPattern": true,
  "patternId": "stack"
}