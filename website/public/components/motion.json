{
  "type": "component",
  "fileDependencies": [
    "./factory"
  ],
  "id": "motion",
  "file": {
    "name": "motion.tsx",
    "content": "\"use client\";\n\nimport { splitProps } from \"@dreamy-ui/react\";\nimport { type MotionProps, isValidMotionProp, m } from \"motion/react\";\nimport { forwardRef } from \"react\";\nimport { isCssProperty, styled } from \"styled-system/jsx\";\nimport { type FlexProperties, flex } from \"styled-system/patterns\";\nimport type { HTMLDreamyProps } from \"./factory\";\n\nconst StyledMotionBox = styled(\n    m.div,\n    {},\n    {\n        shouldForwardProp: (prop, variantKeys) =>\n            isValidMotionProp(prop) || (!variantKeys.includes(prop) && !isCssProperty(prop))\n    }\n);\n\n/**\n * MotionBox component. A styled wrapper around the `m.div` component from `motion/react`.\n *\n * @See Docs https://dreamy-ui.com/docs/components/motion-box\n */\nexport const MotionBox = forwardRef<HTMLDivElement, MotionBoxProps>((props, ref) => {\n    return (\n        <StyledMotionBox\n            ref={ref}\n            {...(props as any)}\n        />\n    );\n});\n\ntype BoxWithNoMotionProps = Omit<HTMLDreamyProps<\"div\">, keyof MotionProps>;\n\nexport interface MotionBoxProps extends BoxWithNoMotionProps, MotionProps {\n    ref?: React.Ref<HTMLDivElement>;\n}\n\nexport const MotionFlex = forwardRef<HTMLDivElement, MotionFlexProps>((props, ref) => {\n    const [patternProps, restProps] = splitProps(props, [\n        \"align\",\n        \"justify\",\n        \"direction\",\n        \"wrap\",\n        \"basis\",\n        \"grow\",\n        \"shrink\"\n    ]);\n\n    const styles = flex.raw(patternProps);\n\n    return (\n        <StyledMotionBox\n            ref={ref}\n            {...(styles as any)}\n            {...restProps}\n        />\n    );\n});\n\nMotionFlex.displayName = \"MotionFlex\";\n\ntype MotionAndFlexProps = MotionProps & FlexProperties;\ntype FlexWithNoMotionProps = Omit<HTMLDreamyProps<\"div\">, keyof MotionAndFlexProps>;\n\nexport interface MotionFlexProps extends FlexWithNoMotionProps, FlexProperties, MotionProps {}\n"
  },
  "component": "Motion",
  "hasRecipe": false,
  "hasPattern": true,
  "patternIds": [
    "flex"
  ]
}