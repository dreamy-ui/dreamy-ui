{
  "type": "component",
  "fileDependencies": [
    "./factory"
  ],
  "id": "motion",
  "file": {
    "name": "motion.tsx",
    "content": "\"use client\";\n\nimport { splitProps } from \"@dreamy-ui/react\";\nimport { type MotionProps, m } from \"motion/react\";\nimport { forwardRef } from \"react\";\nimport { type FlexProperties, flex } from \"styled-system/patterns\";\nimport { type HTMLDreamyProps, dreamy } from \"./factory\";\n\nconst StyledMotionBox = m.create(dreamy.div);\n// dreamy(\n//     m.div,\n//     {},\n//     {\n//         shouldForwardProp: (prop, variantKeys) =>\n//             isValidMotionProp(prop) || (!variantKeys.includes(prop) && !isCssProperty(prop))\n//     }\n// );\n\n/**\n * MotionBox component. A styled wrapper around the `m.div` component from `motion/react`.\n *\n * @See Docs https://dreamy-ui.com/docs/components/motion\n */\nexport const MotionBox = forwardRef<HTMLDivElement, MotionBoxProps>(\n\t(props, ref) => {\n\t\treturn <StyledMotionBox ref={ref} {...(props as any)} />;\n\t}\n);\n\nexport interface MotionBoxProps\n\textends Omit<HTMLDreamyProps<\"div\">, keyof MotionProps>,\n\t\tMotionProps {}\n\n/**\n * MotionFlex component\n *\n * @See Docs https://dreamy-ui.com/docs/components/motion\n */\nexport const MotionFlex = forwardRef<HTMLDivElement, MotionFlexProps>(\n\t(props, ref) => {\n\t\tconst [patternProps, restProps] = splitProps(props, [\n\t\t\t\"align\",\n\t\t\t\"justify\",\n\t\t\t\"direction\",\n\t\t\t\"wrap\",\n\t\t\t\"basis\",\n\t\t\t\"grow\",\n\t\t\t\"shrink\"\n\t\t]);\n\n\t\tconst styles = flex.raw(patternProps);\n\n\t\treturn (\n\t\t\t<StyledMotionBox ref={ref} {...(styles as any)} {...restProps} />\n\t\t);\n\t}\n);\n\nexport interface MotionFlexProps\n\textends Omit<MotionBoxProps, \"direction\">,\n\t\tFlexProperties {}\n"
  },
  "component": "Motion",
  "hasRecipe": false,
  "hasPattern": true,
  "patternIds": [
    "flex"
  ]
}