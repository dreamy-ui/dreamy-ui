{
  "type": "composition",
  "fileDependencies": [
    "./factory",
    "./tooltip"
  ],
  "id": "snippet",
  "file": {
    "name": "snippet.tsx",
    "content": "import { useSnippet, UseSnippetProps } from \"@dreamy-ui/react\";\nimport { type SVGProps, cloneElement, forwardRef, useMemo } from \"react\";\nimport { snippet } from \"styled-system/recipes\";\nimport { dreamy } from \"./factory\";\nimport { Tooltip } from \"./tooltip\";\n\nexport interface SnippetProps extends UseSnippetProps {}\n\nconst StyledSnippet = dreamy(\"div\", snippet);\n\n/**\n * Snippet component. Use with `useSnippet` hook.\n */\nexport const Snippet = forwardRef<HTMLDivElement, SnippetProps>(\n\t(props, ref) => {\n\t\tconst {\n\t\t\tpreRef,\n\t\t\tchildren,\n\t\t\tcopied,\n\t\t\tcopyIcon = <CopyIcon />,\n\t\t\tcheckIcon = <CheckIcon />,\n\t\t\tsymbolBefore,\n\t\t\tdisableTooltip,\n\t\t\thideSymbol,\n\t\t\thideCopyButton,\n\t\t\ttooltipProps,\n\t\t\tisMultiLine,\n\t\t\tgetSnippetProps,\n\t\t\tgetCopyButtonProps\n\t\t} = useSnippet({ ...props, ref });\n\n\t\tconst contents = useMemo(() => {\n\t\t\tconst clonedCheckIcon =\n\t\t\t\tcheckIcon &&\n\t\t\t\tcloneElement(checkIcon, { \"data-part\": \"check-icon\" });\n\t\t\tconst clonedCopyIcon =\n\t\t\t\tcopyIcon &&\n\t\t\t\tcloneElement(copyIcon, { \"data-part\": \"copy-icon\" });\n\n\t\t\tif (hideCopyButton) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\treturn (\n\t\t\t\t<Tooltip\n\t\t\t\t\thasArrow\n\t\t\t\t\tisDisabled={\n\t\t\t\t\t\tcopied ||\n\t\t\t\t\t\ttooltipProps.isDisabled ||\n\t\t\t\t\t\tdisableTooltip ||\n\t\t\t\t\t\tprops.disableCopy\n\t\t\t\t\t}\n\t\t\t\t\t{...tooltipProps}\n\t\t\t\t>\n\t\t\t\t\t{/* @ts-ignore - \"aria-label\" IS a string */}\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\ticon={copied ? clonedCheckIcon : clonedCopyIcon}\n\t\t\t\t\t\tsize={\"sm\"}\n\t\t\t\t\t\tvariant={\"ghost\"}\n\t\t\t\t\t\t{...getCopyButtonProps()}\n\t\t\t\t\t/>\n\t\t\t\t</Tooltip>\n\t\t\t);\n\t\t}, [\n\t\t\thideCopyButton,\n\t\t\tgetCopyButtonProps,\n\t\t\ttooltipProps,\n\t\t\tdisableTooltip,\n\t\t\tcopied,\n\t\t\tcheckIcon,\n\t\t\tcopyIcon,\n\t\t\tprops.disableCopy\n\t\t]);\n\n\t\tconst preContent = useMemo(() => {\n\t\t\tif (isMultiLine && children && Array.isArray(children)) {\n\t\t\t\treturn (\n\t\t\t\t\t<div data-part=\"content\">\n\t\t\t\t\t\t{children.map((t, index) => (\n\t\t\t\t\t\t\t<pre\n\t\t\t\t\t\t\t\tkey={`${index}-${t}`}\n\t\t\t\t\t\t\t\tdata-part=\"pre\"\n\t\t\t\t\t\t\t\t// biome-ignore lint/a11y/noNoninteractiveTabindex: <explanation>\n\t\t\t\t\t\t\t\ttabIndex={0}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{!hideSymbol && (\n\t\t\t\t\t\t\t\t\t<span data-part=\"symbol\">\n\t\t\t\t\t\t\t\t\t\t{symbolBefore}\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t{t}\n\t\t\t\t\t\t\t</pre>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn (\n\t\t\t\t<pre\n\t\t\t\t\tref={preRef}\n\t\t\t\t\tdata-part=\"pre\"\n\t\t\t\t\t// biome-ignore lint/a11y/noNoninteractiveTabindex: <explanation>\n\t\t\t\t\ttabIndex={0}\n\t\t\t\t>\n\t\t\t\t\t{!hideSymbol && (\n\t\t\t\t\t\t<span data-part=\"symbol\">{symbolBefore}</span>\n\t\t\t\t\t)}\n\t\t\t\t\t{children}\n\t\t\t\t</pre>\n\t\t\t);\n\t\t}, [children, hideSymbol, isMultiLine, symbolBefore, preRef]);\n\n\t\treturn (\n\t\t\t<StyledSnippet {...(getSnippetProps() as any)}>\n\t\t\t\t{preContent}\n\t\t\t\t{contents}\n\t\t\t</StyledSnippet>\n\t\t);\n\t}\n);\n\nSnippet.displayName = \"Snippet\";\n\nexport function CheckIcon(props: SVGProps<SVGSVGElement>) {\n\treturn (\n\t\t<svg\n\t\t\taria-hidden=\"true\"\n\t\t\twidth=\"16\"\n\t\t\theight=\"16\"\n\t\t\tviewBox=\"0 0 24 24\"\n\t\t\tfill=\"none\"\n\t\t\tstroke=\"currentColor\"\n\t\t\tstrokeWidth=\"2\"\n\t\t\tstrokeLinecap=\"round\"\n\t\t\tstrokeLinejoin=\"round\"\n\t\t\t{...props}\n\t\t>\n\t\t\t<path d=\"M20 6 9 17l-5-5\" />\n\t\t</svg>\n\t);\n}\n\nfunction CopyIcon(props: SVGProps<SVGSVGElement>) {\n\treturn (\n\t\t<svg\n\t\t\taria-hidden=\"true\"\n\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\twidth=\"16\"\n\t\t\theight=\"16\"\n\t\t\tviewBox=\"0 0 24 24\"\n\t\t\tfill=\"none\"\n\t\t\tstroke=\"currentColor\"\n\t\t\tstrokeWidth=\"2\"\n\t\t\tstrokeLinecap=\"round\"\n\t\t\tstrokeLinejoin=\"round\"\n\t\t\t{...props}\n\t\t>\n\t\t\t<rect width=\"14\" height=\"14\" x=\"8\" y=\"8\" rx=\"2\" ry=\"2\" />\n\t\t\t<path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\" />\n\t\t</svg>\n\t);\n}\n"
  },
  "component": "Snippet"
}