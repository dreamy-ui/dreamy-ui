{
  "type": "composition",
  "fileDependencies": [
    "./box",
    "./checkbox",
    "./factory",
    "./text",
    "./visually-hidden"
  ],
  "id": "checkbox-card",
  "file": {
    "name": "checkbox-card.tsx",
    "content": "import { createContext, useCheckbox, UseCheckboxProps } from \"@dreamy-ui/react\";\nimport {\n\ttype ElementType,\n\ttype ReactElement,\n\tcloneElement,\n\tforwardRef,\n\tuseMemo\n} from \"react\";\nimport {\n\ttype CheckboxCardVariantProps,\n\tcheckboxCard\n} from \"styled-system/recipes\";\nimport { Box } from \"./box\";\nimport { CheckboxIcon } from \"./checkbox\";\nimport { dreamy } from \"./factory\";\nimport { Text, TextProps } from \"./text\";\nimport { VisuallyHiddenInput } from \"./visually-hidden\";\n\nexport const [CheckboxProvider, useCheckboxCardContext] =\n\tcreateContext<UseCheckboxProps>({\n\t\tstrict: false\n\t});\n\nexport interface CheckboxCardProps\n\textends UseCheckboxProps,\n\t\tCheckboxCardVariantProps {\n\ttitle?: string;\n\tdescription?: string;\n\ttitleTag?: ElementType;\n\ttitleProps?: TextProps;\n\tdescriptionProps?: TextProps;\n}\n\nconst StyledCheckbox = dreamy(\"div\", checkboxCard);\n\n/**\n * CheckboxCard component\n *\n * @See Docs https://dreamy-ui.com/docs/components/checkbox-card\n */\nexport const CheckboxCard = forwardRef<HTMLInputElement, CheckboxCardProps>(\n\t(props, ref) => {\n\t\tconst {\n\t\t\ttitle,\n\t\t\tdescription,\n\t\t\ttitleTag = \"p\",\n\t\t\ttitleProps,\n\t\t\tdescriptionProps,\n\t\t\t...rest\n\t\t} = props;\n\t\tconst {\n\t\t\tchildren,\n\t\t\ticon = <CheckboxIcon />,\n\t\t\tisChecked,\n\t\t\tisDisabled,\n\t\t\tisInvalid,\n\t\t\tgetRootProps,\n\t\t\tgetWrapperProps,\n\t\t\tgetInputProps,\n\t\t\tgetIconProps,\n\t\t\tgetLabelProps\n\t\t} = useCheckbox({ ...rest, isCard: true, ref });\n\n\t\tconst clonedIcon = useMemo(() => {\n\t\t\treturn typeof icon === \"function\"\n\t\t\t\t? icon(getIconProps() as any)\n\t\t\t\t: cloneElement(icon as ReactElement, getIconProps());\n\t\t}, [getIconProps, icon]);\n\n\t\tconst ctx = useMemo(() => {\n\t\t\treturn {\n\t\t\t\tchildren,\n\t\t\t\ticon,\n\t\t\t\tisChecked,\n\t\t\t\tisDisabled,\n\t\t\t\tisInvalid,\n\t\t\t\tgetRootProps,\n\t\t\t\tgetWrapperProps,\n\t\t\t\tgetInputProps,\n\t\t\t\tgetIconProps,\n\t\t\t\tgetLabelProps\n\t\t\t};\n\t\t}, [\n\t\t\tchildren,\n\t\t\ticon,\n\t\t\tisChecked,\n\t\t\tisDisabled,\n\t\t\tisInvalid,\n\t\t\tgetRootProps,\n\t\t\tgetWrapperProps,\n\t\t\tgetInputProps,\n\t\t\tgetIconProps,\n\t\t\tgetLabelProps\n\t\t]);\n\n\t\treturn (\n\t\t\t<CheckboxProvider value={ctx}>\n\t\t\t\t<StyledCheckbox {...(getRootProps() as any)}>\n\t\t\t\t\t<Box data-part={\"header\"}>\n\t\t\t\t\t\t<Text as={titleTag} data-part={\"title\"} {...titleProps}>\n\t\t\t\t\t\t\t{title}\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t<Box data-part={\"checkbox-root\"}>\n\t\t\t\t\t\t\t<VisuallyHiddenInput\n\t\t\t\t\t\t\t\t{...(getInputProps() as any)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<span {...getWrapperProps()}>{clonedIcon}</span>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</Box>\n\t\t\t\t\t<Text data-part={\"description\"} {...descriptionProps}>\n\t\t\t\t\t\t{description}\n\t\t\t\t\t</Text>\n\t\t\t\t</StyledCheckbox>\n\t\t\t</CheckboxProvider>\n\t\t);\n\t}\n);\n\nCheckboxCard.displayName = \"Checkbox\";\n"
  },
  "component": "CheckboxCard"
}