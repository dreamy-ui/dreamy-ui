{
  "type": "composition",
  "fileDependencies": [
    "./box",
    "./factory"
  ],
  "id": "spinner",
  "file": {
    "name": "spinner.tsx",
    "content": "import { forwardRef } from \"react\";\nimport { type SpinnerVariantProps, spinner } from \"styled-system/recipes\";\nimport { Box, type BoxProps } from \"./box\";\nimport { dreamy } from \"./factory\";\n\nexport interface SpinnerProps extends BoxProps, SpinnerVariantProps {\n\t/**\n\t * Speed of the spinner animation\n\t */\n\tspeed?: `${number}s` | `${number}ms`;\n\t/**\n\t * The label of the spinner\n\t */\n\tlabel?: string;\n\t/**\n\t * Props to be forwarded to the label\n\t * Alternatively, you can use `css` prop in the `Spinner` component\n\t * to style the label like:\n\t * ```ts\n\t * <Spinner\n\t *   label={\"Loading\"}\n\t *   css={{\n\t *     \"& [data-part=label]\": {\n\t *       color: \"fg\"\n\t *     }\n\t *   }}\n\t * />\n\t * ```\n\t */\n\tlabelProps?: BoxProps;\n}\n\nconst StyledSpinner = dreamy(\"div\", spinner);\n\n/**\n * Spinner indicates a loading state for a user.\n *\n * @See Docs https://dreamy-ui.com/docs/components/spinner\n */\nexport const Spinner = forwardRef<HTMLDivElement, SpinnerProps>(\n\t(props, ref) => {\n\t\tconst { label, labelProps, speed, style, ...rest } = props;\n\n\t\treturn (\n\t\t\t<StyledSpinner\n\t\t\t\tref={ref}\n\t\t\t\t{...rest}\n\t\t\t\tdata-part=\"root\"\n\t\t\t\tstyle={{\n\t\t\t\t\t// @ts-expect-error\n\t\t\t\t\t\"--spinner-speed\": speed,\n\t\t\t\t\t...style\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<div data-part=\"wrapper\">\n\t\t\t\t\t<i data-part=\"circle1\" />\n\t\t\t\t\t<i data-part=\"circle2\" />\n\t\t\t\t</div>\n\t\t\t\t{label && (\n\t\t\t\t\t<Box as={\"span\"} {...labelProps} data-part=\"label\">\n\t\t\t\t\t\t{label}\n\t\t\t\t\t</Box>\n\t\t\t\t)}\n\t\t\t</StyledSpinner>\n\t\t);\n\t}\n);\n\nSpinner.displayName = \"Spinner\";\n"
  },
  "component": "Spinner"
}