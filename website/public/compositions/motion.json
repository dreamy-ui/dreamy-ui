{
  "type": "composition",
  "fileDependencies": [
    "./factory"
  ],
  "id": "motion",
  "file": {
    "name": "motion.tsx",
    "content": "\"use client\";\n\nimport { splitProps } from \"@dreamy-ui/react\";\nimport { type MotionProps, isValidMotionProp, m } from \"motion/react\";\nimport { forwardRef } from \"react\";\nimport { isCssProperty, styled } from \"styled-system/jsx\";\nimport { flex, FlexProperties } from \"styled-system/patterns\";\nimport { HTMLDreamyProps } from \"./factory\";\n\nconst StyledMotionBox = styled(\n\tm.div,\n\t{},\n\t{\n\t\tshouldForwardProp: (prop, variantKeys) =>\n\t\t\tisValidMotionProp(prop) ||\n\t\t\t(!variantKeys.includes(prop) && !isCssProperty(prop))\n\t}\n);\n\n/**\n * MotionBox component. A styled wrapper around the `m.div` component from `motion/react`.\n *\n * @See Docs https://dreamy-ui.com/docs/components/motion-box\n */\nexport const MotionBox = forwardRef<HTMLDivElement, MotionBoxProps>(\n\t(props, ref) => {\n\t\treturn <StyledMotionBox ref={ref} {...(props as any)} />;\n\t}\n);\n\ntype BoxWithNoMotionProps = Omit<HTMLDreamyProps<\"div\">, keyof MotionProps>;\n\nexport interface MotionBoxProps extends BoxWithNoMotionProps, MotionProps {\n\tref?: React.Ref<HTMLDivElement>;\n}\n\nexport const MotionFlex = forwardRef<HTMLDivElement, MotionFlexProps>(\n\t(props, ref) => {\n\t\tconst [patternProps, restProps] = splitProps(props, [\n\t\t\t\"align\",\n\t\t\t\"justify\",\n\t\t\t\"direction\",\n\t\t\t\"wrap\",\n\t\t\t\"basis\",\n\t\t\t\"grow\",\n\t\t\t\"shrink\"\n\t\t]);\n\n\t\tconst styles = flex.raw(patternProps);\n\n\t\treturn (\n\t\t\t<StyledMotionBox ref={ref} {...(styles as any)} {...restProps} />\n\t\t);\n\t}\n);\n\nMotionFlex.displayName = \"MotionFlex\";\n\ntype MotionAndFlexProps = MotionProps & FlexProperties;\ntype FlexWithNoMotionProps = Omit<\n\tHTMLDreamyProps<\"div\">,\n\tkeyof MotionAndFlexProps\n>;\n\nexport interface MotionFlexProps\n\textends FlexWithNoMotionProps,\n\t\tFlexProperties,\n\t\tMotionProps {}\n"
  },
  "component": "Motion"
}