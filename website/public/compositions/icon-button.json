{
  "type": "composition",
  "fileDependencies": [
    "./button",
    "./factory"
  ],
  "id": "icon-button",
  "file": {
    "name": "icon-button.tsx",
    "content": "\"use client\";\n\nimport { forwardRef } from \"react\";\nimport type { ButtonVariantProps } from \"styled-system/recipes\";\nimport { Button, UniversalButtonProps } from \"./button\";\nimport { HTMLDreamyProps } from \"./factory\";\n\ninterface Props extends UniversalButtonProps {\n\t/**\n\t * aria-label is required for accessibility\n\t */\n\t\"aria-label\": string;\n\t/*\n\t * The icon to display\n\t */\n\ticon: React.ReactNode;\n}\n\nexport interface IconButtonProps\n\textends Omit<HTMLDreamyProps<\"button\">, \"aria-label\" | \"children\">,\n\t\tButtonVariantProps,\n\t\tProps {}\n\nexport const IconButton = forwardRef<HTMLButtonElement, IconButtonProps>(\n\t({ icon, ...props }, ref) => {\n\t\treturn (\n\t\t\t<Button ref={ref} {...props} data-type={\"icon-button\"}>\n\t\t\t\t{icon}\n\t\t\t</Button>\n\t\t);\n\t}\n);\n"
  },
  "component": "IconButton"
}