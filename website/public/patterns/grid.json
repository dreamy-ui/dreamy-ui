{
  "type": "pattern",
  "id": "grid",
  "file": {
    "name": "grid.ts",
    "content": "import { definePattern } from \"@pandacss/dev\";\n\nexport const grid = definePattern({\n\tproperties: {\n\t\tgap: { type: \"property\", value: \"gap\" },\n\t\tcolumnGap: { type: \"property\", value: \"gap\" },\n\t\trowGap: { type: \"property\", value: \"gap\" },\n\t\tcolumns: { type: \"number\" },\n\t\tminChildWidth: { type: \"token\", value: \"sizes\", property: \"width\" }\n\t},\n\tdefaultValues(props) {\n\t\treturn { gap: props.columnGap || props.rowGap ? undefined : \"10px\" };\n\t},\n\ttransform(props, { map, isCssUnit }) {\n\t\tconst { columnGap, rowGap, gap, columns, minChildWidth, ...rest } =\n\t\t\tprops;\n\t\tconst getValue = (v: string) =>\n\t\t\tisCssUnit(v) ? v : `token(sizes.${v}, ${v})`;\n\t\treturn {\n\t\t\tdisplay: \"grid\",\n\t\t\tgridTemplateColumns:\n\t\t\t\tcolumns != null\n\t\t\t\t\t? map(columns, (v) => `repeat(${v}, minmax(0, 1fr))`)\n\t\t\t\t\t: minChildWidth != null\n\t\t\t\t\t? map(\n\t\t\t\t\t\t\tminChildWidth,\n\t\t\t\t\t\t\t(v) =>\n\t\t\t\t\t\t\t\t`repeat(auto-fit, minmax(${getValue(v)}, 1fr))`\n\t\t\t\t\t  )\n\t\t\t\t\t: undefined,\n\t\t\tgap,\n\t\t\tcolumnGap,\n\t\t\trowGap,\n\t\t\t...rest\n\t\t};\n\t}\n});\n"
  }
}