{
  "type": "pattern",
  "id": "grid",
  "file": {
    "name": "grid.ts",
    "content": "import { definePattern } from \"@pandacss/dev\";\r\n\r\nexport const grid = definePattern({\r\n\tproperties: {\r\n\t\tgap: { type: \"property\", value: \"gap\" },\r\n\t\tcolumnGap: { type: \"property\", value: \"gap\" },\r\n\t\trowGap: { type: \"property\", value: \"gap\" },\r\n\t\tcolumns: { type: \"number\" },\r\n\t\tminChildWidth: { type: \"token\", value: \"sizes\", property: \"width\" }\r\n\t},\r\n\tdefaultValues(props) {\r\n\t\treturn { gap: props.columnGap || props.rowGap ? undefined : \"10px\" };\r\n\t},\r\n\ttransform(props, { map, isCssUnit }) {\r\n\t\tconst { columnGap, rowGap, gap, columns, minChildWidth, ...rest } =\r\n\t\t\tprops;\r\n\t\tconst getValue = (v: string) =>\r\n\t\t\tisCssUnit(v) ? v : `token(sizes.${v}, ${v})`;\r\n\t\treturn {\r\n\t\t\tdisplay: \"grid\",\r\n\t\t\tgridTemplateColumns:\r\n\t\t\t\tcolumns != null\r\n\t\t\t\t\t? map(columns, (v) => `repeat(${v}, minmax(0, 1fr))`)\r\n\t\t\t\t\t: minChildWidth != null\r\n\t\t\t\t\t? map(\r\n\t\t\t\t\t\t\tminChildWidth,\r\n\t\t\t\t\t\t\t(v) =>\r\n\t\t\t\t\t\t\t\t`repeat(auto-fit, minmax(${getValue(v)}, 1fr))`\r\n\t\t\t\t\t  )\r\n\t\t\t\t\t: undefined,\r\n\t\t\tgap,\r\n\t\t\tcolumnGap,\r\n\t\t\trowGap,\r\n\t\t\t...rest\r\n\t\t};\r\n\t}\r\n});\r\n"
  }
}